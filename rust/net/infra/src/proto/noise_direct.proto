/*
 * Copyright 2025 Signal Messenger, LLC
 * SPDX-License-Identifier: AGPL-3.0-only
 */

syntax = "proto3";

package signal.proto.noise_direct;

option java_package = "org.whispersystems.textsecuregcm.grpc.net.noisedirect";
option java_outer_classname = "NoiseDirectProtos";

message CloseReason {
  enum Code {
    UNSPECIFIED = 0;
    // Indicates non-error termination
    // Examples:
    //   - The client is finished with the connection
    OK = 1;

    // There was an issue with the handshake. If sent after a handshake response,
    // the response includes more information about the nature of the error
    // Examples:
    //  - The client did not provide a handshake message
    //  - The client had incorrect authentication credentials. The handshake
    //    payload includes additional details
    HANDSHAKE_ERROR = 2;

    // There was an encryption/decryption issue after the handshake
    // Examples:
    //   - The client incorrectly encrypted a noise message and it had a bad
    //     AEAD tag
    ENCRYPTION_ERROR = 3;

    // The server is temporarily unavailable, going away, or requires a
    // connection reset
    // Examples:
    //   - The server is shutting down
    //   - The clientâ€™s authentication credentials have been rotated
    UNAVAILABLE = 4;

    // There was an an internal error
    // Examples:
    //   - The server experienced a temporary database outage that prevented it
    //     from checking the client's credentials
    INTERNAL_ERROR = 5;
  }

  Code code = 1;

  // If present, includes details about the error. Implementations should never
  // parse or otherwise implement conditional logic based on the contents of the
  // error message string, it is for logging and debugging purposes only.
  string message = 2;
}
